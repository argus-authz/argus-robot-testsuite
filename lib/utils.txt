** Settings ***

Library    OperatingSystem
Library    Process
Resource   variables.txt

Variables  ${ENV_FILE}

*** Keywords ***

Execute and Check Success  [Arguments]  ${cmd}
  ${rc}  ${output}=  Run and Return RC And Output  ${cmd}
  Should Be Equal As Integers  ${rc}  0  ${cmd} failed with ${output}  False
  [Return]  ${output}  ${EMPTY}

Execute and Check Failure  [Arguments]   ${cmd}
  ${rc}  ${output}=   Run and Return RC And Output  ${cmd}
  Should Not Be Equal As Integers  ${rc}  0  ${cmd} failed with ${output}
  [Return]  ${output}

Create policyfile  [Arguments]  ${policies}
  Create File  ${POLICY_FILE}  ${policies}

Load policyfile
  ${result}=  Run Process  pap-admin  apf  ${POLICY_FILE}
  [Return]  ${result.rc}

Remove policyfile
  Remove File  ${POLICY_FILE}
  
Clean policy repository
  Execute And Check Success  pap-admin rap

Clean up
  Clean policy repository
  Remove policyfile

Prepare environment  [Arguments]  ${policies}
  Create policyfile  ${policies}
  Clean policy repository
  ${rc}=  Load policyfile
  Should Be Equal As Integers  ${rc}  0

Load environment variables
  Execute and Check Success  source ${ENV_FILE}

Create working directory
  ${secs}=  Get Time  epoch
  ${workdir}=  Join Path  ${TMP_DIR}  argus-testsuite_${secs}
  Create Directory  ${workdir}
  [Return]  ${workdir}

Make backup of the configuration
  ${workdir}=  Create working directory
  Set Environment Variable  WORKDIR  ${workdir}
  ${bck_conf_dir}=  Join Path  ${workdir}  conf_backup
  Create Directory  ${bck_conf_dir}
  Copy File  ${T_PDP_CONF}/${T_PDP_INI}  ${bck_conf_dir}
  Copy File  ${T_PEP_CONF}/${T_PEP_INI}  ${bck_conf_dir}
  Copy File  ${T_PAP_CONF}/${T_PAP_ADMIN_INI}  ${bck_conf_dir} 
  Copy File  ${T_PAP_CONF}/${T_PAP_AUTH_INI}  ${bck_conf_dir}
  Copy File  ${T_PAP_CONF}/${T_PAP_CONF_INI}  ${bck_conf_dir}
  Copy File  ${GRIDDIR}/${GRID_MAPFILE}  ${bck_conf_dir}
  Copy File  ${GRIDDIR}/${GROUPMAPFILE}  ${bck_conf_dir}
  Copy Directory  ${GRIDDIR}/${GRIDMAPDIR}    ${bck_conf_dir}
  
Restore PAP configuration
  ${bck_conf_dir}=  Join Path  %{WORKDIR}  conf_backup
  Copy File  ${bck_conf_dir}/${T_PAP_CONF_INI}  ${T_PAP_CONF}/${T_PAP_CONF_INI}
  Copy File  ${bck_conf_dir}/${T_PAP_AUTH_INI}  ${T_PAP_CONF}/${T_PAP_AUTH_INI}
  Copy File  ${bck_conf_dir}/${T_PAP_ADMIN_INI}  ${T_PAP_CONF}/${T_PAP_ADMIN_INI}

Restore PDP configuration
  ${bck_conf_dir}=  Join Path  %{WORKDIR}  conf_backup
  Copy File  ${bck_conf_dir}/${T_PDP_INI}  ${T_PDP_CONF}/${T_PDP_INI}

Restore PEP configuration
  ${bck_conf_dir}=  Join Path  %{WORKDIR}  conf_backup
  Copy File  ${bck_conf_dir}/${T_PEP_INI}  ${T_PEP_CONF}/${T_PEP_INI}
  
Restore configurations
  Restore PAP configuration
  Restore PDP configuration
  Restore PEP configuration
  
Restore services
  Stop PAP service
  Stop PDP service
  Stop PEP service
  Sleep  5
  Start PAP service
  Start PDP service
  Start PEP service
 
Change parameter value  [Arguments]  ${file}  ${parameter}  ${value}
  Execute and Check Success  sed -i 's/^\(${parameter} =\).*/\1'\ ${value}'/' ${file}

Comment parameter  [Arguments]  ${file}  ${parameter}
  Execute and Check Success  sed -i 's/${parameter}/#${parameter}/g' ${file}

Replace string  [Arguments]  ${file}  ${old_string}  ${new_string}
  Execute and Check Success  sed -i 's/${old_string}/${new_string}/g' ${file}

Get PAP status
  ${result}=  Run Process  pgrep  -cf  org.glite.authz.pap.server.standalone.PAPServer
  [Return]  ${result.stdout}

Get PDP status
  ${result}=  Run Process  pgrep  -cf  org.glite.authz.pdp.server.PDPDaemon
  [Return]  ${result.stdout}
  
Get PEP status
  ${result}=  Run Process  pgrep  -cf  org.glite.authz.pep.server.PEPDaemon
  [Return]  ${result.stdout}
  
Check port  [Arguments]  ${port}
  ${cmd}=  Set Variable  nmap -Pn -p ${port} `hostname` | grep -q open
  ${rc}=  Run And Return Rc  ${cmd}
  Should Be Equal As Integers  ${rc}  0
  
Port not reachable  [Arguments]  ${port}
  ${cmd}=  Set Variable  nmap -Pn -p ${port} `hostname` | grep -q open
  ${rc}=  Run And Return Rc  ${cmd}
  Should Be Equal As Integers  ${rc}  1

Start PAP service
  Run Process  systemctl  start  argus-pap
  Wait Until Keyword Succeeds  1 min  2 sec  Check port  ${T_PAP_PORT}
  Log  PAP started
  
Start PDP service
  Run Process  systemctl  start  argus-pdp
  Wait Until Keyword Succeeds  1 min  2 sec  Check port  ${T_PDP_PORT}
  Log  PDP started

Start PEP service
  Run Process  systemctl  start  argus-pepd
  Wait Until Keyword Succeeds  1 min  2 sec  Check port  ${T_PEP_PORT}
  Log  PEP started

Stop PAP service
  Run Process  systemctl  stop  argus-pap
  Wait Until Keyword Succeeds  1 min  2 sec  Port not reachable  ${T_PAP_ADMIN_PORT},${T_PAP_PORT}
  Log  PAP stopped

Stop PDP service
  Run Process  systemctl  stop  argus-pdp
  Wait Until Keyword Succeeds  1 min  2 sec  Port not reachable  ${T_PDP_ADMIN_PORT},${T_PDP_PORT}
  Log  PDP stopped

Stop PEP service
  Run Process  systemctl  stop  argus-pepd
  Wait Until Keyword Succeeds  1 min  2 sec  Port not reachable  ${T_PEP_ADMIN_PORT},${T_PEP_PORT}
  Log  PEP stopped

Restore PAP
  Stop PAP service
  Restore PAP configuration
  Start PAP service

Setup Argus suite
  Make backup of the configuration
  Start PAP service
  Start PDP service
  Start PEP service

Teardown Argus suite
  Restore configurations
  Restore services